local Workspace = game:GetService("Workspace")
local Run = game:GetService("RunService")
local Gui = game:GetService("GuiService")
local Stats = game:GetService("Stats")
local Sound = game:GetService("SoundService")
local NonReplicatedCSGDictionary = game:GetService("NonReplicatedCSGDictionaryService")
local CSGDictionary = game:GetService("CSGDictionaryService")
local Log = game:GetService("LogService")
local ContentProvider = game:GetService("ContentProvider")
local KeyframeSequenceProvider = game:GetService("KeyframeSequenceProvider")
local Chat = game:GetService("Chat")
local Marketplace = game:GetService("MarketplaceService")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local LocalPlayerMouse = LocalPlayer:GetMouse()
local Points = game:GetService("PointsService")
local Ad = game:GetService("AdService")
local Notification = game:GetService("NotificationService")
local ReplicatedFirst = game:GetService("ReplicatedFirst")
local HttpRbxApi = game:GetService("HttpRbxApiService")
local Tween = game:GetService("TweenService")
local Text = game:GetService("TextService")
local StudioData = game:GetService("StudioData")
local StarterPlayer = game:GetService("StarterPlayer")
local StarterPack = game:GetService("StarterPack")
local StarterGui = game:GetService("StarterGui")
local CoreGui = game:GetService("CoreGui")
local Localization = game:GetService("LocalizationService")
local Teleport = game:GetService("TeleportService")
local Joints = game:GetService("JointsService")
local Collection = game:GetService("CollectionService")
local Physics = game:GetService("PhysicsService")
local Badge = game:GetService("BadgeService")
local Geometry = game:GetService("Geometry")
local Friend = game:GetService("FriendService")
local Insert = game:GetService("InsertService")
local GamePass = game:GetService("GamePassService")
local Debris = game:GetService("Debris")
local Timer = game:GetService("TimerService")
local Cookies = game:GetService("CookiesService")
local UserInput = game:GetService("UserInputService")
local Keyboard = game:GetService("KeyboardService")
local Mouse = game:GetService("MouseService")
local VR = game:GetService("VRService")
local ContextAction = game:GetService("ContextActionService")
local Script = game:GetService("ScriptService")
local Asset = game:GetService("AssetService")
local TouchInput = game:GetService("TouchInputService")
local Browser = game:GetService("BrowserService")
local ScriptContext = game:GetService("ScriptContext")
local Selection = game:GetService("Selection")
local MeshContentProvider = game:GetService("MeshContentProvider")
local Lighting = game:GetService("Lighting")
local SolidModelContentProvider = game:GetService("SolidModelContentProvider")
local Gamepad = game:GetService("GamepadService")
local Controller = game:GetService("ControllerService")
local CorePackages = game:GetService("CorePackages")
local RuntimeScript = game:GetService("RuntimeScriptService")
local ABTest = game:GetService("ABTestService")
local Haptic = game:GetService("HapticService")
local NetworkClient = game:GetService("NetworkClient")
local Http = game:GetService("HttpService")
local ChangeHistory = game:GetService("ChangeHistoryService")
local Visit = game:GetService("Visit")
local GuidRegistry = game:GetService("GuidRegistryService")
local Teams = game:GetService("Teams")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RobloxReplicatedStorage = game:GetService("RobloxReplicatedStorage")
local Test = game:GetService("TestService")
local Social = game:GetService("SocialService")
local Policy = game:GetService("PolicyService")
local RbxAnalytics = game:GetService("RbxAnalyticsService")
local Group = game:GetService("GroupService")
local Spawner = game:GetService("SpawnerService")
local Pathfinding = game:GetService("PathfindingService")
local ui = loadstring(game:GetObjects("rbxassetid://4133667265")[1].Source)("Library by wally")
local w = ui:CreateWindow('Farming')
local b = w:Button("Autofarm", function()
    loadstring(game:HttpGet("https://pastebin.com/raw/iPJkreHg", true))()
    print("General Autofarm")
end)
local AutoEquipGunsTable = {
    "Auto Equip Gun"
}
for _, GetChildren in pairs(ReplicatedStorage.Guns:GetChildren()) do
    table.insert(AutoEquipGunsTable, GetChildren.Name)
end
w:Dropdown("Select Gun", {
    location = _G,
    flag = "sg",
    list = AutoEquipGunsTable
}, function(new)
    warn(new)
    print(_G.sg)
    while wait(0.1) do
        FindFirstChild = LocalPlayer.Backpack:FindFirstChild(_G.sg)
        for _, GetChildren in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
            if GetChildren.Name == "Humanoid" then
                GetChildren:EquipTool(FindFirstChild)
            end
        end
    end
end)
local t23 = w:Toggle('Anti-AFK', {
    flag = "aa",
    location = Variables
}, function()
    if aa then
        VirtualUser = game:GetService("VirtualUser")
        LocalPlayer.Idled:connect(function()
            VirtualUser:Button2Down(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
            wait(1)
            VirtualUser:Button2Up(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
            print("Anti-AFK =", aa)
        end)
    else
        print("Anti-AFK =", aa)
    end
end)
